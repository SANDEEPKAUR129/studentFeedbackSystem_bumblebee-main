    const postTitle = req.body.postTitle;
    const postdate = req.body.postdate;
    const postimage = req.body.postimage;
    const postbody = req.body.postbody;
    
     if( !postTitle || !postdate || !postbody ){  
      return res.send( { status: "Error", Error : "Complete all form fields"} )
     }

          //  storing data in db
            db.query('INSERT INTO post SET image = ?, title =?, postbody=?,  postdate=? ', [ postimage, postTitle,  postbody, postdate ], (err, data)=>{
              if(!err){
                console.log(data)
                console.log("Success")
                return res.send( { status: "Success"} )
              
              }else{
                console.log("Failed to post, try again later or contact support")
                return res.send( { status: "Error", Error : "Failed to post, try again later or contact support"} )
              }
            })
























 const db = require('../dataBase/dataBase');
const multer = require('multer');

// Set up multer for file upload
const storage = multer.diskStorage({
  destination: function(req, file, cb) {
    cb(null, './uploads'); 
  },
  filename: function (req, file, cb) {
    cb(null, file.originalname + '-' + Date.now() + '.' + file.originalname.split('.').pop());
  }
});
const upload = multer({ storage }).single('postimage');

// Create Feed Post
exports.createfeed = (req, res) => {
   
 
  upload(req, res, function(err) {
    if (err instanceof multer.MulterError) {
        // A Multer error occurred when uploading.
        let message = "An error occurred during file upload.";
      
        // Handle specific Multer error codes
        switch (err.code) {
          case "LIMIT_PART_COUNT":
            message = "Too many parts in multipart request.";
            break;
          case "LIMIT_FILE_SIZE":
            message = "File too large.";
            break;
          case "LIMIT_FILE_COUNT":
            message = "Too many files.";
            break;
          case "LIMIT_FIELD_KEY":
            message = "Field name too long.";
            break;
          case "LIMIT_FIELD_VALUE":
            message = "Field value too long.";
            break;
          case "LIMIT_FIELD_COUNT":
            message = "Too many fields.";
            break;
          case "LIMIT_UNEXPECTED_FILE":
            message = "Unexpected file field.";
            break;
          // This error is generated by Multer when the storage engine fails
          case "ERR_STORAGE_ENGINE":
            message = "Storage engine error.";
            break;
        }
        return res.status(400).send({ status: "Error", error: message });
      } else if (err) {
        // An unknown error occurred when uploading.
        console.error(err); // Log the error for server-side inspection
        return res.status(500).send({ status: "Error", error: "An unexpected error occurred" });
      }      

    // If upload is successful or no file was uploaded
    if (!req.file) {
      console.log('No Uploaded file');
    } else {
        const filename  = req.file.filename;
        const postTitle = req.body.posttitle;
        const postdate  = req.body.postdate;
        const postbody  = req.body.postbody;
        const posttype  = req.body.posttype;
        console.log(req.body, filename);
        if( !postTitle || !postdate || !postbody ){  
            return res.send( { status: "Error", Error : "Complete all form fields"} );
           }

        //storing data in db
            db.query('INSERT INTO post SET image = ?, title = ?, postbody = ?, posttype = ?,  postdate = ? ', [ filename, postTitle,  postbody, posttype, postdate ], (err, data)=>{
                if(!err){
                  console.log(data);
                  console.log("Success");
                  return res.send( { status: "Success"});
                
                }else{
                  console.log("Failed to post, try again later or contact support")
                  return res.send( { status: "Error", Error : "Failed to post, try again later or contact support"});
                }
       })
     }
  });

}